ArrayList<Asteroid> asteroids;
Spaceship spaceship;

void setup() {
  size(800, 600);
  spaceship = new Spaceship(width / 2, height / 2); 
  asteroids = new ArrayList<Asteroid>();
  for (int i = 0; i < 5; i++) {
    asteroids.add(new Asteroid(random(width), random(height))); 
  }
}

void draw() {
  background(0);

  for (int i = asteroids.size() - 1; i >= 0; i--) {
    Asteroid asteroid = asteroids.get(i);
    float distance = dist(spaceship.getMyCenterX(), spaceship.getMyCenterY(), asteroid.getMyCenterX(), asteroid.getMyCenterY());

    if (distance < 20) {
      asteroids.remove(i);
    } else {
      asteroid.display();
      asteroid.move();
    }
  }

  spaceship.display();
  spaceship.move();
}


class Floater {
  protected int corners;
  protected int[] xCorners, yCorners;
  protected float myCenterX, myCenterY;
  protected float myDirectionX, myDirectionY;
  protected float myPointDirection;
  protected int myColor;

  void move() {
    myCenterX += myDirectionX;
    myCenterY += myDirectionY;
  }

  float getMyCenterX() {
    return myCenterX;
  }

  float getMyCenterY() {
    return myCenterY;
  }
}

class Asteroid extends Floater {
  private float rotationSpeed;

  Asteroid(float x, float y) { 
    super();
    rotationSpeed = random(-0.1, 0.1);
    myColor = color(150, 75, 0);
    myCenterX = x; // og positon
    myCenterY = y; // og positon
  }

  void move() {
    super.move();
    myPointDirection = myPointDirection + rotationSpeed;
  }

  void display() {
    fill(myColor);
    stroke(255);
    strokeWeight(2);
    ellipse(myCenterX, myCenterY, 50, 50);
  }
}
